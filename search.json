[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Ajith Raju Aumbati",
    "section": "",
    "text": "Hello, I’m Ajith Raju Aumbati\n\n\nWelcome to my personal website. I am currently pursuing a Master’s degree in Data Analytics Engineering at George Mason University. #I have a background in Electrical and Electronics Engineering and 2 years of experience as an #Application Development Associate at Accenture\n\n\nProfessional Interests\nData Analysis and Visualization\n- Machine Learning and Predictive Modeling\n- Big Data Analytics\n\n\nKey Skills\nR, Python\n- MySQL, Power BI, Microsoft Azure\n```"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About this site",
    "section": "",
    "text": "About this site\n\n\nHello, I’m Ajith Raju Aumbati\n\n\nWelcome to my personal website. I am currently pursuing a Master’s degree in Data Analytics Engineering at George Mason University. #I have a background in Electrical and Electronics Engineering and 2 years of experience as an #Application Development Associate at Accenture"
  },
  {
    "objectID": "index.html#professional-interests",
    "href": "index.html#professional-interests",
    "title": "Ajith Raju Aumbati",
    "section": "Professional Interests",
    "text": "Professional Interests\nData Analysis and Visualization\n- Machine Learning and Predictive Modeling\n- Big Data Analytics"
  },
  {
    "objectID": "index.html#key-skills",
    "href": "index.html#key-skills",
    "title": "Ajith Raju Aumbati",
    "section": "Key Skills",
    "text": "Key Skills\nR, Python\n- MySQL, Power BI, Microsoft Azure\n```"
  },
  {
    "objectID": "Mid-project.html",
    "href": "Mid-project.html",
    "title": "Mid-project-Group4",
    "section": "",
    "text": "title: “Mid-project-Group4” author: “Ajith and Saranya” date: “2024-10-06” format: html\n\n\nMid-Project\nWelcome to the mid-project page. Here, you will find the following:\n\n“Comparison of Original and Re-designed Visualizations: Addressing Drawbacks for Improved Clarity”\nCode for the re-designed versions of visualizations"
  },
  {
    "objectID": "Original Design and Re-designed Versions.html",
    "href": "Original Design and Re-designed Versions.html",
    "title": "Original Design and Re-designed Versions",
    "section": "",
    "text": "title: “Original Design and Re-designed Versions” author: “Ajith” date: “2024-10-06” format: html"
  },
  {
    "objectID": "Original Design and Re-designed Versions.html#visualization-1-original-plot",
    "href": "Original Design and Re-designed Versions.html#visualization-1-original-plot",
    "title": "Original Design and Re-designed Versions",
    "section": "Visualization 1: Original Plot",
    "text": "Visualization 1: Original Plot\n\n\n# Load necessary libraries\nlibrary(ggplot2)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\n\n# Loading the CSV file of the given data\ndata &lt;- read.csv(\"competitive_eating_data.csv\")\n\n# Convert the data to numeric if it's not in numeric form\ndata$Hot_Dogs_Eaten &lt;- as.numeric(as.character(data$Hot_Dogs_Eaten))\n\n# Handle missing values for female competitors pre-2011 by assigning NA\ndata &lt;- data %&gt;%\n  mutate(Hot_Dogs_Eaten = ifelse(Gender == \"Female\" & Year &lt; 2011, NA, Hot_Dogs_Eaten))\n\n# Plot using ggplot\nggplot(data, aes(x = Year, y = Hot_Dogs_Eaten, color = Competitor, group = Competitor)) +\n  # indicate the missing values(NA) using Line plot\n  geom_line(size = 1.5, na.rm = TRUE) +\n  \n  # Add points for clarity\n  geom_point(size = 3) +\n  \n  # Highlighting the record-breaking performances .i.e(&gt;= 70 hot dogs)\n  geom_point(data = subset(data, Hot_Dogs_Eaten &gt;= 70), \n             aes(x = Year, y = Hot_Dogs_Eaten), \n             size = 5, shape = 21, fill = \"yellow\", color = \"black\", stroke = 1.5) +\n  \n  # Add a vertical dashed line to mark the start of the female competition in 2011\n  geom_vline(xintercept = 2011, linetype = \"dashed\", color = \"red\", size = 1.2) +\n  \n  # Annotate key moments like the start of the female competition and key competitor milestones\n  annotate(\"text\", x = 2011, y = 40, label = \"Female competition starts\", size = 3, angle = 90, color = \"red\", vjust = -0.5) +\n  annotate(\"text\", x = 2005, y = 60, label = \"Kobayashi’s streak\", size = 3, color = \"black\", vjust = 1.5) +\n  annotate(\"text\", x = 2021, y = 76, label = \"Chestnut: 76 hot dogs\", size = 3, color = \"green\", vjust = -1) +\n  annotate(\"text\", x = 2021, y = 47, label = \"Miki Sudo\", size = 3, color = \"green\", vjust = -1) +\n  annotate(\"text\", x = 2008, y = 61, label = \"2008 Tie (Chestnut Wins)\", size = 3, color = \"black\", vjust = -1.5) +\n  annotate(\"text\", x = 1985, y = 15, label = \" ~10  hot dogs in 1980's was typical\", size = 3, color = \"black\", vjust = -1.5) +\n  \n  # Set plot titles and labels\n  labs(title = \"Professional Eaters performed better Over Time\",\n       subtitle = \"Annual performance of competitiotrs\",\n       caption = \"Miki Sudo did not compete while pregnant in 2021\",\n       x = \"Year\", \n       y = \"Hot Dogs Eaten\",\n       color = \"Competitor\") +\n  \n  # Set color scale to differentiate competitors\n  scale_color_manual(values = c(\"Kobayashi\" = \"red\", \"Chestnut\" = \"yellow\", \"Sudo\" = \"green\", \"Other\" = \"lightpink\")) +\n  \n  # Adjusting the theme for clarity\n  theme_minimal(base_size = 15) +\n  theme(legend.position = \"bottom\",\n        legend.title = element_blank(),\n        plot.title = element_text(hjust = 0.5, size = 20),\n        plot.subtitle = element_text(hjust = 0.5, size = 14),\n        plot.caption = element_text(size = 10, hjust = 1))\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\n\n\n\nrmarkdown::render(\"HOTDOG-fin1.R\")\n\n\n\nprocessing file: HOTDOG-fin1.spin.Rmd\n\n\n\n  |                                                          \n  |                                                    |   0%\n  |                                                          \n  |.................                                   |  33%                  \n  |                                                          \n  |...................................                 |  67% [unnamed-chunk-8]\n  |                                                          \n  |....................................................| 100%                  \n                                                                                                            \n\n\noutput file: HOTDOG-fin1.knit.md\n\n\n\"C:/Program Files/RStudio/resources/app/bin/quarto/bin/tools/pandoc\" +RTS -K512m -RTS HOTDOG-fin1.knit.md --to html4 --from markdown+autolink_bare_uris+tex_math_single_backslash --output HOTDOG-fin1.html --lua-filter \"C:\\Users\\ajith\\AppData\\Local\\R\\win-library\\4.4\\rmarkdown\\rmarkdown\\lua\\pagebreak.lua\" --lua-filter \"C:\\Users\\ajith\\AppData\\Local\\R\\win-library\\4.4\\rmarkdown\\rmarkdown\\lua\\latex-div.lua\" --embed-resources --standalone --variable bs3=TRUE --section-divs --template \"C:\\Users\\ajith\\AppData\\Local\\R\\win-library\\4.4\\rmarkdown\\rmd\\h\\default.html\" --no-highlight --variable highlightjs=1 --variable theme=bootstrap --mathjax --variable \"mathjax-url=https://mathjax.rstudio.com/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\" --include-in-header \"C:\\Users\\ajith\\AppData\\Local\\Temp\\RtmpC0rYIU\\rmarkdown-str86c84641a5f.html\" \n\n\n\nOutput created: HOTDOG-fin1.html"
  },
  {
    "objectID": "Code for re-designed visualization's.html",
    "href": "Code for re-designed visualization's.html",
    "title": "My Project",
    "section": "",
    "text": "##Original Data Visualization\nIn this section, we present the code for the re-designed visualizations of the original data published over the internet.\n\n# Loading the CSV file of the given data\ndata &lt;- read.csv(\"competitive_eating_data.csv\")\n\n# Convert the data to numeric if it's not in numeric form\ndata$Hot_Dogs_Eaten &lt;- as.numeric(as.character(data$Hot_Dogs_Eaten))\n\n# Handle missing values for female competitors pre-2011 by assigning NA\ndata &lt;- data %&gt;%\n  mutate(Hot_Dogs_Eaten = ifelse(Gender == \"Female\" & Year &lt; 2011, NA, Hot_Dogs_Eaten))\n\n#VISUALIZATION1\n# Faceted Line Plot for gender-based comparison\nggplot(data, aes(x = Year, y = Hot_Dogs_Eaten, color = Competitor, group = Competitor)) +\n  geom_line(size = 1.5, na.rm = TRUE) +  # Line plot for each competitor\n  geom_point(size = 3) +  # Add points for each year\n  \n  # Highlight record-breaking performances with larger points\n  geom_point(data = subset(data, Hot_Dogs_Eaten &gt;= 70), \n             aes(x = Year, y = Hot_Dogs_Eaten), \n             size = 5, shape = 21, fill = \"yellow\", color = \"black\", stroke = 1.5) +\n  \n  # Facet based on  Gender for a better comparison between male and female trends\n  facet_wrap(~ Gender, scales = \"free_y\") +\n  \n  # Titles and labels\n  labs(title = \"Gender wise Competitive Eating Performance  \",\n       x = \"Year\", \n       y = \"Hot Dogs Eaten\",\n       color = \"Competitor\") +\n  \n  # Minimal theme for clarity\n  theme_minimal(base_size = 15) +\n  theme(legend.position = \"bottom\", plot.title = element_text(hjust = 0.5))\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\n\n\n\n#VISUALIZATION2\n# Visualization using Stacked Area Plot for cumulative performance over time\nggplot(data, aes(x = Year, y = Hot_Dogs_Eaten, fill = Competitor)) +\n  geom_area(alpha = 0.6, size = 1.2, color = \"black\", na.rm = TRUE) +  # Stacked areas for cumulative performance\n  \n  # Highlight record-breaking points\n  geom_point(data = subset(data, Hot_Dogs_Eaten &gt;= 70), \n             aes(x = Year, y = Hot_Dogs_Eaten), \n             size = 5, shape = 21, fill = \"yellow\", color = \"black\", stroke = 1.5) +\n  \n  # Titles and labels\n  labs(title = \"Cumulative Performance of Competitive Eaters Over Time\",\n       x = \"Year\", \n       y = \"Hot Dogs Eaten\",\n       fill = \"Competitor\") +\n  \n  # Minimal theme for clarity\n  theme_minimal(base_size = 15) +\n  theme(legend.position = \"bottom\", plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\n\n\nrmarkdown::render(\"HOTDOG-fin1.R\")\n\n\n\nprocessing file: HOTDOG-fin1.spin.Rmd\n\n\n\n  |                                                          \n  |                                                    |   0%\n  |                                                          \n  |.................                                   |  33%                  \n  |                                                          \n  |...................................                 |  67% [unnamed-chunk-8]\n  |                                                          \n  |....................................................| 100%                  \n                                                                                                            \n\n\noutput file: HOTDOG-fin1.knit.md\n\n\n\"C:/Program Files/RStudio/resources/app/bin/quarto/bin/tools/pandoc\" +RTS -K512m -RTS HOTDOG-fin1.knit.md --to html4 --from markdown+autolink_bare_uris+tex_math_single_backslash --output HOTDOG-fin1.html --lua-filter \"C:\\Users\\ajith\\AppData\\Local\\R\\win-library\\4.4\\rmarkdown\\rmarkdown\\lua\\pagebreak.lua\" --lua-filter \"C:\\Users\\ajith\\AppData\\Local\\R\\win-library\\4.4\\rmarkdown\\rmarkdown\\lua\\latex-div.lua\" --embed-resources --standalone --variable bs3=TRUE --section-divs --template \"C:\\Users\\ajith\\AppData\\Local\\R\\win-library\\4.4\\rmarkdown\\rmd\\h\\default.html\" --no-highlight --variable highlightjs=1 --variable theme=bootstrap --mathjax --variable \"mathjax-url=https://mathjax.rstudio.com/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\" --include-in-header \"C:\\Users\\ajith\\AppData\\Local\\Temp\\RtmpAXxX2k\\rmarkdown-str36ac472536b.html\" \n\n\n\nOutput created: HOTDOG-fin1.html"
  },
  {
    "objectID": "Comparison of Original and Re-designed Visualizations.html",
    "href": "Comparison of Original and Re-designed Visualizations.html",
    "title": "Comparison of Original and Re-designed Visualizations: Addressing Drawbacks for Improved Clarity",
    "section": "",
    "text": "The current visualization’s has following shortcomings:\n\n1. Overlapping of Competitor Data: When one or two competitors dominate (e.g., Joey Chestnut), insights are unclear when all competitors’ results are crowded onto a single plot in the original chart. It becomes difficult to distinguish between competitors who consume fewer hot dogs.\n2. ImproperGender Segmentation: Male and female rivals are not properly separated in the original chart. We can see that the  performances of the male and female competitors are inconsistent, which makes it challenging to identify patterns for the female competitors.\n3. Clutter in the Early Years: A general line still reveals little rivalry, but there is an excessive amount of unclear data from the 1980s and 1990s because there aren’t enough precise records. This is not very helpful and is confusing.\n4.Limited Information on Female rivals: Although Miki Sudo is singled out, there’s no information regarding the overall advancement of female rivals over time.\n\n\n1.Visualization1:\nFacet wrapping by gender\n\n\n\n1. Faceted Line Plot by Gender and Competitor\nThis plot addresses the clutter in the original graph by separating trends for male and female competitors while still showing the individual performances of key competitors (Joey Chestnut, Kobayashi, Miki Sudo, etc.). Explanation:\n\nFaceting by gender allows clear comparison between male and female competitors without cluttering the main plot.\nFree y-scales for each gender ensure that the scale adapts to the data range of male and female competitors.\nImportant milestones for each competitor are labeled with their maximum achievements.\nThis visualization makes it easier to track both the dominance of Joey Chestnut and Miki Sudo, while showing how other competitors have performed in comparison.\n2.VISUALIZATION-2\nStacked Area Plot (Cumulative Trends for Competitors Over Time)\n\nA stacked area map illustrates how the overall quantity of hot dogs consumed has increased over time, giving a visual depiction of cumulative performance. The contributions of each rival are displayed as discrete areas, highlighting periods of dominance.\nJustification:\n• Stacked area charts illustrate the annual growth in the overall number of hot dogs consumed by rivals.• The contributions of each contestant are distinguished by color, making it possible for you to see how many hot dogs each competitor has consumed overall.\n\nJoey Chestnut’s domination over the years and the other competitors’ contributions to the overall performance become evident.\n\n\n\nWhy These Two Visualizations?\n1. Faceted Line Plot:\n\nThis representation clearly separates male and female rivals, making it easy to analyze trends without overlap.The unconstrained y-axis eliminates distortions between male and female performance, allowing for more equitable comparisons.\nJoey Chestnut and Miki Sudo clearly dominate their respective categories.\n\n2.Stacked Area Plot:\n\nThe stacked area plot shows the cumulative growth of competitive eating performances over time, highlighting individual competitors’ contributions to overall totals.\nIt’s an intuitive way to show how much each competitor has “dominated” certain years relative to others.\nArea proportions highlight noteworthy trends, such as top performers Joey Chestnut or Kobayashi, or Miki Sudo’s performance compared to other female rivals.\n\nThese two forms of visualization not only preserve the original data but also facilitate the analysis of gender-specific patterns, competitor dominance, and overall competitive performance advancement over time. Please let me know if you have any suggestions for improving these visualizations or if you require any additional information about implementation!"
  },
  {
    "objectID": "Code for re-designed visualization's..html",
    "href": "Code for re-designed visualization's..html",
    "title": "My Project",
    "section": "",
    "text": "##Original Data Visualization\nIn this section, we present the code for the re-designed visualizations of the original data published over the internet.\n\n# Loading the CSV file of the given data\ndata &lt;- read.csv(\"competitive_eating_data.csv\")\n\n# Convert the data to numeric if it's not in numeric form\ndata$Hot_Dogs_Eaten &lt;- as.numeric(as.character(data$Hot_Dogs_Eaten))\n\n# Handle missing values for female competitors pre-2011 by assigning NA\ndata &lt;- data %&gt;%\n  mutate(Hot_Dogs_Eaten = ifelse(Gender == \"Female\" & Year &lt; 2011, NA, Hot_Dogs_Eaten))\n\n#VISUALIZATION1\n# Faceted Line Plot for gender-based comparison\nggplot(data, aes(x = Year, y = Hot_Dogs_Eaten, color = Competitor, group = Competitor)) +\n  geom_line(size = 1.5, na.rm = TRUE) +  # Line plot for each competitor\n  geom_point(size = 3) +  # Add points for each year\n  \n  # Highlight record-breaking performances with larger points\n  geom_point(data = subset(data, Hot_Dogs_Eaten &gt;= 70), \n             aes(x = Year, y = Hot_Dogs_Eaten), \n             size = 5, shape = 21, fill = \"yellow\", color = \"black\", stroke = 1.5) +\n  \n  # Facet based on  Gender for a better comparison between male and female trends\n  facet_wrap(~ Gender, scales = \"free_y\") +\n  \n  # Titles and labels\n  labs(title = \"Gender wise Competitive Eating Performance  \",\n       x = \"Year\", \n       y = \"Hot Dogs Eaten\",\n       color = \"Competitor\") +\n  \n  # Minimal theme for clarity\n  theme_minimal(base_size = 15) +\n  theme(legend.position = \"bottom\", plot.title = element_text(hjust = 0.5))\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\n\n\n\n#VISUALIZATION2\n# Visualization using Stacked Area Plot for cumulative performance over time\nggplot(data, aes(x = Year, y = Hot_Dogs_Eaten, fill = Competitor)) +\n  geom_area(alpha = 0.6, size = 1.2, color = \"black\", na.rm = TRUE) +  # Stacked areas for cumulative performance\n  \n  # Highlight record-breaking points\n  geom_point(data = subset(data, Hot_Dogs_Eaten &gt;= 70), \n             aes(x = Year, y = Hot_Dogs_Eaten), \n             size = 5, shape = 21, fill = \"yellow\", color = \"black\", stroke = 1.5) +\n  \n  # Titles and labels\n  labs(title = \"Cumulative Performance of Competitive Eaters Over Time\",\n       x = \"Year\", \n       y = \"Hot Dogs Eaten\",\n       fill = \"Competitor\") +\n  \n  # Minimal theme for clarity\n  theme_minimal(base_size = 15) +\n  theme(legend.position = \"bottom\", plot.title = element_text(hjust = 0.5))"
  },
  {
    "objectID": "Comparison_of_Original_and_Redesigned_Visualizations.html",
    "href": "Comparison_of_Original_and_Redesigned_Visualizations.html",
    "title": "Comparison of Original and Re-designed Visualizations: Addressing Drawbacks for Improved Clarity",
    "section": "",
    "text": "The current visualization’s has following shortcomings:\n\n\n\nOriginal Visualization\n\n\n\n1. Overlapping of Competitor Data: When one or two competitors dominate (e.g., Joey Chestnut), insights are unclear when all competitors’ results are crowded onto a single plot in the original chart. It becomes difficult to distinguish between competitors who consume fewer hot dogs.\n2. ImproperGender Segmentation: Male and female rivals are not properly separated in the original chart. We can see that the  performances of the male and female competitors are inconsistent, which makes it challenging to identify patterns for the female competitors.\n3. Clutter in the Early Years: A general line still reveals little rivalry, but there is an excessive amount of unclear data from the 1980s and 1990s because there aren’t enough precise records. This is not very helpful and is confusing.\n4.Limited Information on Female rivals: Although Miki Sudo is singled out, there’s no information regarding the overall advancement of female rivals over time.\n\n\n1.Visualization1:\n\n\n\nRedesigned Visualization\n\n\nFacet wrapping by gender\n\n\n\n1. Faceted Line Plot by Gender and Competitor\nThis plot addresses the clutter in the original graph by separating trends for male and female competitors while still showing the individual performances of key competitors (Joey Chestnut, Kobayashi, Miki Sudo, etc.). Explanation:\n\nFaceting by gender allows clear comparison between male and female competitors without cluttering the main plot.\nFree y-scales for each gender ensure that the scale adapts to the data range of male and female competitors.\nImportant milestones for each competitor are labeled with their maximum achievements.\nThis visualization makes it easier to track both the dominance of Joey Chestnut and Miki Sudo, while showing how other competitors have performed in comparison.\n2.VISUALIZATION-2\n\nStacked Area Plot (Cumulative Trends for Competitors Over Time)\nA stacked area map illustrates how the overall quantity of hot dogs consumed has increased over time, giving a visual depiction of cumulative performance. The contributions of each rival are displayed as discrete areas, highlighting periods of dominance.\nJustification:\n• Stacked area charts illustrate the annual growth in the overall number of hot dogs consumed by rivals.• The contributions of each contestant are distinguished by color, making it possible for you to see how many hot dogs each competitor has consumed overall.\n\nJoey Chestnut’s domination over the years and the other competitors’ contributions to the overall performance become evident.\n\n\n\nWhy These Two Visualizations?\n1. Faceted Line Plot:\n\nThis representation clearly separates male and female rivals, making it easy to analyze trends without overlap.The unconstrained y-axis eliminates distortions between male and female performance, allowing for more equitable comparisons.\nJoey Chestnut and Miki Sudo clearly dominate their respective categories.\n\n2.Stacked Area Plot:\n\nThe stacked area plot shows the cumulative growth of competitive eating performances over time, highlighting individual competitors’ contributions to overall totals.\nIt’s an intuitive way to show how much each competitor has “dominated” certain years relative to others.\nArea proportions highlight noteworthy trends, such as top performers Joey Chestnut or Kobayashi, or Miki Sudo’s performance compared to other female rivals.\n\nThese two forms of visualization not only preserve the original data but also facilitate the analysis of gender-specific patterns, competitor dominance, and overall competitive performance advancement over time. Please let me know if you have any suggestions for improving these visualizations or if you require any additional information about implementation."
  },
  {
    "objectID": "Code for re-designed visualizations..html",
    "href": "Code for re-designed visualizations..html",
    "title": "My Project",
    "section": "",
    "text": "##Original Data Visualization-1\nIn this section, we present the code for the re-designed visualizations of the original data published over the internet.\n\n# Loading the CSV file of the given data\ndata &lt;- read.csv(\"competitive_eating_data.csv\")\n\n# Convert the data to numeric if it's not in numeric form\ndata$Hot_Dogs_Eaten &lt;- as.numeric(as.character(data$Hot_Dogs_Eaten))\n\n# Handle missing values for female competitors pre-2011 by assigning NA\ndata &lt;- data %&gt;%\n  mutate(Hot_Dogs_Eaten = ifelse(Gender == \"Female\" & Year &lt; 2011, NA, Hot_Dogs_Eaten))\n\n#VISUALIZATION1\n# Faceted Line Plot for gender-based comparison\nggplot(data, aes(x = Year, y = Hot_Dogs_Eaten, color = Competitor, group = Competitor)) +\n  geom_line(size = 1.5, na.rm = TRUE) +  # Line plot for each competitor\n  geom_point(size = 3) +  # Add points for each year\n  \n  # Highlight record-breaking performances with larger points\n  geom_point(data = subset(data, Hot_Dogs_Eaten &gt;= 70), \n             aes(x = Year, y = Hot_Dogs_Eaten), \n             size = 5, shape = 21, fill = \"yellow\", color = \"black\", stroke = 1.5) +\n  \n  # Facet based on  Gender for a better comparison between male and female trends\n  facet_wrap(~ Gender, scales = \"free_y\") +\n  \n  # Titles and labels\n  labs(title = \"Gender wise Competitive Eating Performance  \",\n       x = \"Year\", \n       y = \"Hot Dogs Eaten\",\n       color = \"Competitor\") +\n  \n  # Minimal theme for clarity\n  theme_minimal(base_size = 15) +\n  theme(legend.position = \"bottom\", plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\n\n\n#VISUALIZATION2\n# Visualization using Stacked Area Plot for cumulative performance over time\nggplot(data, aes(x = Year, y = Hot_Dogs_Eaten, fill = Competitor)) +\n  geom_area(alpha = 0.6, size = 1.2, color = \"black\", na.rm = TRUE) +  # Stacked areas for cumulative performance\n  \n  # Highlight record-breaking points\n  geom_point(data = subset(data, Hot_Dogs_Eaten &gt;= 70), \n             aes(x = Year, y = Hot_Dogs_Eaten), \n             size = 5, shape = 21, fill = \"yellow\", color = \"black\", stroke = 1.5) +\n  \n  # Titles and labels\n  labs(title = \"Cumulative Performance of Competitive Eaters Over Time\",\n       x = \"Year\", \n       y = \"Hot Dogs Eaten\",\n       fill = \"Competitor\") +\n  \n  # Minimal theme for clarity\n  theme_minimal(base_size = 15) +\n  theme(legend.position = \"bottom\", plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\n\n\nOriginal Design-2\n\n# Generate dates from 01 Jan 2024\n# The reason for choosing seq.Date() over seq() is seq() is more general function and seq.Date() is specific to create date. \n# https://www.geeksforgeeks.org/how-to-generate-a-sequence-of-timestamps-in-r/\n# https://rpubs.com/pep1024/date_sequence\ndate_cases &lt;- seq.Date(from = as.Date(\"2020-01-01\"), to = as.Date(\"2021-12-31\"), by = \"day\")\nnum_data&lt;-length(date_cases)\nprint(num_data)\n\n[1] 731\n\n# Using set.seed(), the sample dataset generated will be reproduced during all execution\nset.seed(1)\n\n# Original visual consist of count of number of cases over several months. Hence\n# https://www.geeksforgeeks.org/create-random-deviates-of-uniform-distribution-in-r-programming-runif-function/\ncountry_data &lt;- round(runif(num_data, min = 0, max = 200))\n\n# Add missing data of 50 randomly to make the dataset realistic. It is done through randomly selecting few datas and replacing it with NA\n# https://www.geeksforgeeks.org/how-to-generate-a-sample-using-the-sample-function-in-r/- Example 5: Random Sampling of List Elements Using sample Function\n# syntax: data[sample(1:length(data), size = 4)]\n# https://sparkbyexamples.com/r-programming/replace-values-in-r/\nNA_data &lt;- sample(1:num_data, size=50)\ncountry_data[NA_data] &lt;- NA\n\n# Create the dataset required for visualization \nsample_dataset&lt;- tibble(\n  Date=date_cases,\n  Number_of_cases = country_data\n)\n# Print few sample datasets\nhead(sample_dataset)\n\n# A tibble: 6 × 2\n  Date       Number_of_cases\n  &lt;date&gt;               &lt;dbl&gt;\n1 2020-01-01              53\n2 2020-01-02              74\n3 2020-01-03             115\n4 2020-01-04             182\n5 2020-01-05              40\n6 2020-01-06              NA\n\n# Save it as .csv file:\nwrite.csv(sample_dataset, \"sampleData.csv\", row.names = F)\n\n# To plot the cases in each month, we need to take year and month from the Date column.For this we use lubricate library \n# We extract the year and month as a numerical value \n# https://sqlpad.io/tutorial/extract-year-r-complete-guide/#:~:text=A%3A%20The%20lubridate%20package%20in,due%20to%20its%20intuitive%20functions.\n# Refer section: What is the lubridate package and how does it help in extracting years?\nsample_dataset &lt;- sample_dataset %&gt;%\n  mutate(Year = year(Date), \n         Month = month(Date)) \n#https://www.stat.berkeley.edu/~s133/dates.html\n\n# Print few sample datasets with Year and Month column added:\nstr(sample_dataset)\n\ntibble [731 × 4] (S3: tbl_df/tbl/data.frame)\n $ Date           : Date[1:731], format: \"2020-01-01\" \"2020-01-02\" ...\n $ Number_of_cases: num [1:731] 53 74 115 182 40 NA 189 132 126 12 ...\n $ Year           : num [1:731] 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 ...\n $ Month          : num [1:731] 1 1 1 1 1 1 1 1 1 1 ...\n\n# Calculating 7 day average: In the original model, the 7-day average will be plotted for 2 years\n# https://www.geeksforgeeks.org/how-to-calculate-a-rolling-average-in-r/\n# https://stackoverflow.com/questions/66415472/calculate-7-day-average-in-r\nsample_dataset &lt;- sample_dataset %&gt;%\n  group_by(Year) %&gt;%\n  mutate('7-Day avg'= rollmean(Number_of_cases, k=7, fill=NA, na.rm=T)) # Data frame is already passed through pipe operator. na.rm = T is added to ignore the NA values and proceed calculation\n\nstr(sample_dataset)\n\ngropd_df [731 × 5] (S3: grouped_df/tbl_df/tbl/data.frame)\n $ Date           : Date[1:731], format: \"2020-01-01\" \"2020-01-02\" ...\n $ Number_of_cases: num [1:731] 53 74 115 182 40 NA 189 132 126 12 ...\n $ Year           : num [1:731] 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 ...\n $ Month          : num [1:731] 1 1 1 1 1 1 1 1 1 1 ...\n $ 7-Day avg      : num [1:731] NA NA NA 109 122 ...\n - attr(*, \"groups\")= tibble [2 × 2] (S3: tbl_df/tbl/data.frame)\n  ..$ Year : num [1:2] 2020 2021\n  ..$ .rows: list&lt;int&gt; [1:2] \n  .. ..$ : int [1:366] 1 2 3 4 5 6 7 8 9 10 ...\n  .. ..$ : int [1:365] 367 368 369 370 371 372 373 374 375 376 ...\n  .. ..@ ptype: int(0) \n  ..- attr(*, \".drop\")= logi TRUE\n\n\n\n# 1. Visualization using geom smooth \n\nggplot(sample_dataset, aes(x = Month, y = `7-Day avg`, color = as.factor(Year), group = Year)) +\n  geom_smooth(se = FALSE, method = \"loess\", span = 0.2, alpha=0.3) + # standard error wave is set to small \n  labs(title = \"7-Day Average of COVID cases for 2020-2021 (USA)\",\n       x = \"Month\", \n       y = \"7-Day Average\", \n       color = \"Year\") +\n  theme_minimal() +\n  theme(plot.title=element_text(hjust=0.5))+\n  scale_y_continuous(expand = c(0, 0), limits = c(0, 120)) +\n  scale_x_continuous(breaks = 1:12, labels = month.abb)  # https://forum.posit.co/t/converting-number-month-to-month-name/106389\n\n\n\n\n\n\n\n\n\n# 2. Visualization using bar graph\n  \n# Calculate mean for each month from 7-day average and summarize it to plot monthwise \n# https://www.rdocumentation.org/packages/dplyr/versions/0.7.8/topics/summarise\nmean_monthly &lt;- sample_dataset %&gt;%\n  group_by(Year, Month) %&gt;% # group Month and Year for plotting\n  summarize(monthlyMean = mean(`7-Day avg`, na.rm = TRUE))\n\n# Plotting bar to compare the mean values of each month over 2020 and 2021\nggplot(mean_monthly,aes(x = factor(Month, levels = 1:12, labels = month.abb), y = monthlyMean, fill = as.factor(Year))) + # Converting month into Factors to be plotted in x axis\n  geom_bar(stat = \"identity\", position = position_dodge(width = 0.9), width = 0.6) +  # Adjusting the size of bars\n  labs(\n    title = \"Mean (7 day average) of Cases COVID-19-Monthwise - 2020-2021\",\n    x = \"Month\",\n    y = \"Mean (7 day-average)\",\n    fill = \"Year\") +\n  theme_minimal() +\n  theme(axis.title.x = element_text(size = 10),  \n        axis.title.y = element_text(size = 10),  \n        axis.text.y = element_text(size = 8),   \n        plot.margin = margin(1, 1, 1, 1, \"cm\"),  # To reduce the size of the graph\n        plot.title = element_text(size = 12)) +  \n  theme(plot.title=element_text(hjust=0.5))+\n  scale_fill_manual(values = c(\"2020\" = \"lightblue\", \"2021\" = \"orange\"))"
  },
  {
    "objectID": "Code-final.html",
    "href": "Code-final.html",
    "title": "Mid Project-Group4",
    "section": "",
    "text": "Re-Design Of Original Visualization-1\nIn this section, we present the code for the re-designed visualizations of the original data published over the internet.\n\n# Loading the CSV file of the given data[2]\ndata &lt;- read.csv(\"competitive_eating_data.csv\")\n\n# Convert the data to numeric if it's not in numeric form\ndata$Hot_Dogs_Eaten &lt;- as.numeric(as.character(data$Hot_Dogs_Eaten))\n\n# Handle missing values for female competitors pre-2011 by assigning NA\ndata &lt;- data %&gt;%\n  mutate(Hot_Dogs_Eaten = ifelse(Gender == \"Female\" & Year &lt; 2011, NA, Hot_Dogs_Eaten))\n\n#VISUALIZATION1\n# Faceted Line Plot for gender-based comparison\nggplot(data, aes(x = Year, y = Hot_Dogs_Eaten, color = Competitor, group = Competitor)) +\n  geom_line(size = 1.5, na.rm = TRUE) +  # Line plot for each competitor\n  geom_point(size = 3) +  # Add points for each year\n  \n  # Highlight record-breaking performances with larger points\n  geom_point(data = subset(data, Hot_Dogs_Eaten &gt;= 70), \n             aes(x = Year, y = Hot_Dogs_Eaten), \n             size = 5, shape = 21, fill = \"yellow\", color = \"black\", stroke = 1.5) +\n  \n  # Facet based on  Gender for a better comparison between male and female trends\n  facet_wrap(~ Gender, scales = \"free_y\") +\n  \n  # Titles and labels\n  labs(title = \"Gender wise Competitive Eating Performance  \",\n       x = \"Year\", \n       y = \"Hot Dogs Eaten\",\n       color = \"Competitor\") +\n  \n  # Minimal theme for clarity\n  theme_minimal(base_size = 15) +\n  theme(legend.position = \"bottom\", plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\n\n\n#VISUALIZATION2\n# Visualization using Stacked Area Plot for cumulative performance over time\nggplot(data, aes(x = Year, y = Hot_Dogs_Eaten, fill = Competitor)) +\n  geom_area(alpha = 0.6, size = 1.2, color = \"black\", na.rm = TRUE) +  # Stacked areas for cumulative performance\n  \n  # Highlight record-breaking points\n  geom_point(data = subset(data, Hot_Dogs_Eaten &gt;= 70), \n             aes(x = Year, y = Hot_Dogs_Eaten), \n             size = 5, shape = 21, fill = \"yellow\", color = \"black\", stroke = 1.5) +\n  \n  # Titles and labels\n  labs(title = \"Cumulative Performance of Competitive Eaters Over Time\",\n       x = \"Year\", \n       y = \"Hot Dogs Eaten\",\n       fill = \"Competitor\") +\n  \n  # Minimal theme for clarity\n  theme_minimal(base_size = 15) +\n  theme(legend.position = \"bottom\", plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\n\nRe-design of Original Visualization-2\n\n# Generate dates from 01 Jan 2024 \n# The reason for choosing seq.Date() over seq() is seq() is more general function and seq.Date() is specific to create date. \n# https://www.geeksforgeeks.org/how-to-generate-a-sequence-of-timestamps-in-r/\n# https://rpubs.com/pep1024/date_sequence\ndate_cases &lt;- seq.Date(from = as.Date(\"2020-01-01\"), to = as.Date(\"2021-12-31\"), by = \"day\")\nnum_data&lt;-length(date_cases)\nprint(num_data)\n\n[1] 731\n\n# Using set.seed(), the sample dataset generated will be reproduced during all execution\nset.seed(1)\n\n# Original visual consist of count of number of cases over several months. Hence\n# https://www.geeksforgeeks.org/create-random-deviates-of-uniform-distribution-in-r-programming-runif-function/\ncountry_data &lt;- round(runif(num_data, min = 0, max = 200))\n\n# Add missing data of 50 randomly to make the dataset realistic. It is done through randomly selecting few datas and replacing it with NA\n# https://www.geeksforgeeks.org/how-to-generate-a-sample-using-the-sample-function-in-r/- Example 5: Random Sampling of List Elements Using sample Function\n# syntax: data[sample(1:length(data), size = 4)]\n# https://sparkbyexamples.com/r-programming/replace-values-in-r/\nNA_data &lt;- sample(1:num_data, size=50)\ncountry_data[NA_data] &lt;- NA\n\n# Create the dataset required for visualization \nsample_dataset&lt;- tibble(\n  Date=date_cases,\n  Number_of_cases = country_data\n)\n# Print few sample datasets\nhead(sample_dataset)\n\n# A tibble: 6 × 2\n  Date       Number_of_cases\n  &lt;date&gt;               &lt;dbl&gt;\n1 2020-01-01              53\n2 2020-01-02              74\n3 2020-01-03             115\n4 2020-01-04             182\n5 2020-01-05              40\n6 2020-01-06              NA\n\n# Save it as .csv file:\nwrite.csv(sample_dataset, \"sampleData.csv\", row.names = F)\n\n# To plot the cases in each month, we need to take year and month from the Date column.For this we use lubricate library \n# We extract the year and month as a numerical value \n# https://sqlpad.io/tutorial/extract-year-r-complete-guide/#:~:text=A%3A%20The%20lubridate%20package%20in,due%20to%20its%20intuitive%20functions.\n# Refer section: What is the lubridate package and how does it help in extracting years?\nsample_dataset &lt;- sample_dataset %&gt;%\n  mutate(Year = year(Date), \n         Month = month(Date)) \n#https://www.stat.berkeley.edu/~s133/dates.html\n\n# Print few sample datasets with Year and Month column added:\nstr(sample_dataset)\n\ntibble [731 × 4] (S3: tbl_df/tbl/data.frame)\n $ Date           : Date[1:731], format: \"2020-01-01\" \"2020-01-02\" ...\n $ Number_of_cases: num [1:731] 53 74 115 182 40 NA 189 132 126 12 ...\n $ Year           : num [1:731] 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 ...\n $ Month          : num [1:731] 1 1 1 1 1 1 1 1 1 1 ...\n\n# Calculating 7 day average: In the original model, the 7-day average will be plotted for 2 years\n# https://www.geeksforgeeks.org/how-to-calculate-a-rolling-average-in-r/\n# https://stackoverflow.com/questions/66415472/calculate-7-day-average-in-r\nsample_dataset &lt;- sample_dataset %&gt;%\n  group_by(Year) %&gt;%\n  mutate('7-Day avg'= rollmean(Number_of_cases, k=7, fill=NA, na.rm=T)) # Data frame is already passed through pipe operator. na.rm = T is added to ignore the NA values and proceed calculation\n\nstr(sample_dataset)\n\ngropd_df [731 × 5] (S3: grouped_df/tbl_df/tbl/data.frame)\n $ Date           : Date[1:731], format: \"2020-01-01\" \"2020-01-02\" ...\n $ Number_of_cases: num [1:731] 53 74 115 182 40 NA 189 132 126 12 ...\n $ Year           : num [1:731] 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 ...\n $ Month          : num [1:731] 1 1 1 1 1 1 1 1 1 1 ...\n $ 7-Day avg      : num [1:731] NA NA NA 109 122 ...\n - attr(*, \"groups\")= tibble [2 × 2] (S3: tbl_df/tbl/data.frame)\n  ..$ Year : num [1:2] 2020 2021\n  ..$ .rows: list&lt;int&gt; [1:2] \n  .. ..$ : int [1:366] 1 2 3 4 5 6 7 8 9 10 ...\n  .. ..$ : int [1:365] 367 368 369 370 371 372 373 374 375 376 ...\n  .. ..@ ptype: int(0) \n  ..- attr(*, \".drop\")= logi TRUE\n\n\n\n# 1. Visualization using geom smooth \n\nggplot(sample_dataset, aes(x = Month, y = `7-Day avg`, color = as.factor(Year), group = Year)) +\n  geom_smooth(se = FALSE, method = \"loess\", span = 0.2, alpha=0.3) + # standard error wave is set to small \n  labs(title = \"7-Day Average of COVID cases for 2020-2021 (USA)\",\n       x = \"Month\", \n       y = \"7-Day Average\", \n       color = \"Year\") +\n  theme_minimal() +\n  theme(plot.title=element_text(hjust=0.5))+\n  scale_y_continuous(expand = c(0, 0), limits = c(0, 120)) +\n  scale_x_continuous(breaks = 1:12, labels = month.abb)  # https://forum.posit.co/t/converting-number-month-to-month-name/106389\n\n\n\n\n\n\n\n\n\n# 2. Visualization using bar graph\n  \n# Calculate mean for each month from 7-day average and summarize it to plot monthwise \n# https://www.rdocumentation.org/packages/dplyr/versions/0.7.8/topics/summarise\nmean_monthly &lt;- sample_dataset %&gt;%\n  group_by(Year, Month) %&gt;% # group Month and Year for plotting\n  summarize(monthlyMean = mean(`7-Day avg`, na.rm = TRUE))\n\n# Plotting bar to compare the mean values of each month over 2020 and 2021\nggplot(mean_monthly,aes(x = factor(Month, levels = 1:12, labels = month.abb), y = monthlyMean, fill = as.factor(Year))) + # Converting month into Factors to be plotted in x axis\n  geom_bar(stat = \"identity\", position = position_dodge(width = 0.9), width = 0.6) +  # Adjusting the size of bars\n  labs(\n    title = \"Mean (7 day average) of Cases COVID-19-Monthwise - 2020-2021\",\n    x = \"Month\",\n    y = \"Mean (7 day-average)\",\n    fill = \"Year\") +\n  theme_minimal() +\n  theme(axis.title.x = element_text(size = 10),  \n        axis.title.y = element_text(size = 10),  \n        axis.text.y = element_text(size = 8),   \n        plot.margin = margin(1, 1, 1, 1, \"cm\"),  # To reduce the size of the graph\n        plot.title = element_text(size = 12)) +  \n  theme(plot.title=element_text(hjust=0.5))+\n  scale_fill_manual(values = c(\"2020\" = \"lightblue\", \"2021\" = \"orange\"))"
  },
  {
    "objectID": "Comparisons.html",
    "href": "Comparisons.html",
    "title": "Comparison of Original and Re-designed Visualizations: Addressing Drawbacks for Improved Clarity",
    "section": "",
    "text": "Original Visualization-1\n\n\n\nOriginal Visualization\n\n\n\n\n\nOriginal Visualization\n\n\nThe current visualization’s has following shortcomings: [2]\n\n\n1. Overlapping of Competitor Data: When one or two competitors dominate (e.g., Joey Chestnut), insights are unclear when all competitors’ results are crowded onto a single plot in the original chart. It becomes difficult to distinguish between competitors who consume fewer hot dogs.\n2. ImproperGender Segmentation: Male and female rivals are not properly separated in the original chart. We can see that the  performances of the male and female competitors are inconsistent, which makes it challenging to identify patterns for the female competitors.\n3. Clutter in the Early Years: A general line still reveals little rivalry, but there is an excessive amount of unclear data from the 1980s and 1990s because there aren’t enough precise records. This is not very helpful and is confusing.\n4.Limited Information on Female rivals: Although Miki Sudo is singled out, there’s no information regarding the overall advancement of female rivals over time.\n\n\n1.Improved Visualization-1:\n\n\n\nRedesigned Visualization\n\n\nFacet wrapping by gender\n\n\n\n1. Faceted Line Plot by Gender and Competitor\nThis plot addresses the clutter in the original graph by separating trends for male and female competitors while still showing the individual performances of key competitors (Joey Chestnut, Kobayashi, Miki Sudo, etc.). Explanation:\n\nFaceting by gender allows clear comparison between male and female competitors without cluttering the main plot.\nFree y-scales for each gender ensure that the scale adapts to the data range of male and female competitors.\nImportant milestones for each competitor are labeled with their maximum achievements.\nThis visualization makes it easier to track both the dominance of Joey Chestnut and Miki Sudo, while showing how other competitors have performed in comparison.\n2.Improved Visualization-2\n\nStacked Area Plot (Cumulative Trends for Competitors Over Time)\nA stacked area map illustrates how the overall quantity of hot dogs consumed has increased over time, giving a visual depiction of cumulative performance. The contributions of each rival are displayed as discrete areas, highlighting periods of dominance.\nJustification:\n• Stacked area charts illustrate the annual growth in the overall number of hot dogs consumed by rivals.• The contributions of each contestant are distinguished by color, making it possible for you to see how many hot dogs each competitor has consumed overall.\n\nJoey Chestnut’s domination over the years and the other competitors’ contributions to the overall performance become evident.\nWhy These Two Visualizations?\n\n1. Faceted Line Plot:\n\nThis representation clearly separates male and female rivals, making it easy to analyze trends without overlap.The unconstrained y-axis eliminates distortions between male and female performance, allowing for more equitable comparisons.\nJoey Chestnut and Miki Sudo clearly dominate their respective categories.\n\n2.Stacked Area Plot:\n\nThe stacked area plot shows the cumulative growth of competitive eating performances over time, highlighting individual competitors’ contributions to overall totals.\nIt’s an intuitive way to show how much each competitor has “dominated” certain years relative to others.\nArea proportions highlight noteworthy trends, such as top performers Joey Chestnut or Kobayashi, or Miki Sudo’s performance compared to other female rivals.\n\nThese two forms of visualization not only preserve the original data but also facilitate the analysis of gender-specific patterns, competitor dominance, and overall competitive performance advancement over time. Please let me know if you have any suggestions for improving these visualizations or if you require any additional information about implementation.\n\n\nOriginal Visualization-2\n\n\n\nOriginal Visualization\n\n\nProblems in the graph: [1]\nSource: https://www.nytimes.com/2022/01/06/opinion/omicron-covid-us.html\nThis visual drew me in with its spiral design. However, after examining it, I found it challenging to draw any meaningful conclusions. While it was intriguing, it ultimately misrepresented the data, making it difficult to interpret. Here are several issues with the representation:\n1.     Time Should Be a Linear Representation: Time is plotted in linear scale, but in this visual, the designer opted for a spiral layout. This choice represents as a bad visual representation, as time is generally easier to follow in a straight line.\n2.     No Base Axis (0): The visual lacks a clear base axis or “0” point, resulting in values displayed above and below the axis. This can confuse viewers about whether the data indicates positive or negative values. Having values on both sides of the visual contributes to misrepresentation.\n3.     Radial Rather Than Circular: The visual appears radial rather than circular, with the spiral tilting at an angle. It’s unclear what this design choice represents, potentially suggesting skewness but failing to make this intention clear.\n4.     X-Axis Unit Is Not Indicated: The X-axis lacks a unit label, making it challenging to interpret the data accurately.\n5.     Lack of Clarity: This visual lacks overall clarity in it as we do not understand the aim of it.\nThrough the below visualization, I have attempted to provide better visuals for easy and proper understanding\n\n\nVisualization-1:\nThis visual aim to illustrate the 7-day average of COVID-19 cases in the United States, covering the period from the start of the pandemic through the end of 2021. It seeks to offer a simplistic yet informative comparison of cases between 2020 and 2021. The visual utilizes two smooth line graphs that provide a continuous plot of the values, making it easier to understand trends over time. It clearly defines the cases by plotting only positive axes with clear axis values.\n\n\n\nVisualization 1\n\n\n\n\nVisualization-2\n\nVisual 2:\nThis visual intends to provide the viewer with monthly values of cases of COVID. This a discrete plot which is not continuous yet provide and clear picture on the trends of the pandemic. I aimed to make the comparison between 2020 and 2021 easier by grouping and placing them together for easy analysis and understanding.\n\n\nREFERENCES\n1. New York Times Article:\nCitation: Z. Binney, “Omicron Is Our Past Pandemic Mistakes on Fast-Forward,” The New York Times, Jan. 06, 2022. [Online]. Available: https://www.nytimes.com/2022/01/06/opinion/omicron-covid-us.html. [Accessed: Oct. 06, 2024].\n2. Junk Charts Blog Post:\nCitation: K. Fung, “Graphics that stretch stomachs and make merry,” Junk Charts, Jul. 2023. [Online]. Available: https://junkcharts.typepad.com/junk_charts/2023/07/graphics-that-stretch-stomachs-and-make-merry.html. [Accessed: Oct. 06, 2024]."
  }
]